<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">


<style>
    .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.25rem 3rem;
  }
  .logo img {
    height: 1.65rem;
  }
  .desktop-menu ul {
    display: flex;
    gap: 20px;
    list-style: none;
    margin: 0;
    padding: 0;
  }
  .desktop-menu a {
    text-decoration: none;
    color: var(--color-soil);
  }
   .mobile-menu-button {
    display: none;
    cursor: pointer;
  }
  .mobile-menu {
   position: fixed;
   background: var(--color-soil);
   top: 0;
   left: 0;
   width: 100vw;
   height: 100vh;
   background: black;
   display: flex;
   flex-direction: column;
   align-items: flex-start;
   justify-content: flex-start;
   padding: 20px;
   transform: translateX(-100%);
   transition: transform 0.3s ease-in-out;
  }
  .mobile-menu.active {
    transform: translateX(0);
  }
  .mobile-menu-header {
    display: flex;
    justify-content: space-between;
    width: 100%;
    padding: 10px;
    cursor: pointer;
  }
  .mobile-menu .logo {
    padding: 10px 0;
    color: white;
  }
  .mobile-menu nav ul {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 15px;
  }
  .mobile-menu nav a {
    color: var(--color-blanco);
    text-decoration: none;
  }
  .icon {
    display: inline-block;
    width: 24px;
    height: 24px;
  }
  .icon svg {
    width: 100%;
    height: 100%;
  }
  .icon-close{
    color: var(--color-blanco);
  }
  @media (max-width: 375px) {
    .desktop-menu {
      display: none;
    }
    .mobile-menu-button {
      display: block;
    }
  }
</style>

{%- style -%}
  .section-header {
    position: sticky; /* This is for fixing a Safari z-index issue. PR #2147 */
    margin-bottom: {{ section.settings.margin_bottom | times: 0.75 | round: 0 }}px;
  }
{%- endstyle -%}

<sticky-header data-sticky-type="always">
 
 <header class="section-header">
    <div class="container">
      <div class="header-content">
        <div class="logo">
          <a href="{{ shop.url }}">
            <img src="{{ settings.logo | img_url: 'medium' }}" alt="{{ shop.name }}" />
          </a>
        </div>
        
        <nav class="desktop-menu">
          <ul>
            {% for link in linklists.main-menu.links %}
              <li><a href="{{ link.url }}">{{ link.title }}</a></li>
            {% endfor %}
            <li>
              <a href="{{ routes.cart_url }}" id="cart-icon-bubble">
                {% if cart == empty %}
                  <span>CART</span>
                {% else %}
                  <span>CART</span>
                {% endif %}
                <span class="visually-hidden">CART</span>
                {%- if cart != empty -%}
                  <div class="cart-count-bubble">
                    {%- if cart.item_count < 100 -%}
                      <span aria-hidden="true">({{ cart.item_count }})</span>
                    {%- endif -%}
                    <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
                  </div>
                {%- endif -%}
              </a>
            </li>
          </ul>
        </nav>

        <div class="mobile-menu-button">
          <span class="icon">
            {{- 'icon-hamburger.svg' | inline_asset_content -}}
          </span>
        </div>
      </div>
    </div>
  </header>
</sticky-header>

<div class="mobile-menu">
  <div class="mobile-menu-header">
    <div class="logo">
      <a href="{{ shop.url }}">
        <img src="{{ settings.logo | img_url: 'medium' }}" alt="{{ shop.name }}" />
      </a>
    </div>
    <span class="icon icon-close">
      {{- 'icon-close.svg' | inline_asset_content -}}
    </span>
  </div>
  <nav>
    <ul>
      {% for link in linklists.main-menu.links %}
        <li><a href="{{ link.url }}">{{ link.title }}</a></li>
      {% endfor %}
      <li>
        <a href="{{ routes.cart_url }}" id="cart-icon-bubble">
          {% if cart == empty %}
            <span>CART</span>
          {% else %}
            <span>CART</span>
          {% endif %}
          <span class="visually-hidden">CART</span>
          {%- if cart != empty -%}
            <div class="cart-count-bubble">
              {%- if cart.item_count < 100 -%}
                <span aria-hidden="true">({{ cart.item_count }})</span>
              {%- endif -%}
              <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
            </div>
          {%- endif -%}
        </a>
      </li>
    </ul>
  </nav>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    function toggleMobileMenu() {
      const mobileMenu = document.querySelector('.mobile-menu');
      mobileMenu.classList.toggle('active');
    }

    document.querySelector('.mobile-menu-button').addEventListener('click', toggleMobileMenu);
    document.querySelector('.mobile-menu-header').addEventListener('click', toggleMobileMenu);
  });
</script>



{% javascript %}
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.headerIsAlwaysSticky = this.getAttribute('data-sticky-type') === 'always' || this.getAttribute('data-sticky-type') === 'reduce-logo-size';
      this.headerBounds = {};

      this.setHeaderHeight();

      window.matchMedia('(max-width: 990px)').addEventListener('change', this.setHeaderHeight.bind(this));

      if (this.headerIsAlwaysSticky) {
        this.header.classList.add('shopify-section-header-sticky');
      };

      this.currentScrollTop = 0;
      this.preventReveal = false;
      this.predictiveSearch = this.querySelector('predictive-search');

      this.onScrollHandler = this.onScroll.bind(this);
      this.hideHeaderOnScrollUp = () => this.preventReveal = true;

      this.addEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.addEventListener('scroll', this.onScrollHandler, false);

      this.createObserver();
    }

    setHeaderHeight() {
      document.documentElement.style.setProperty('--header-height', `${this.header.offsetHeight}px`);
    }

    disconnectedCallback() {
      this.removeEventListener('preventHeaderReveal', this.hideHeaderOnScrollUp);
      window.removeEventListener('scroll', this.onScrollHandler);
    }

    createObserver() {
      let observer = new IntersectionObserver((entries, observer) => {
        this.headerBounds = entries[0].intersectionRect;
        observer.disconnect();
      });

      observer.observe(this.header);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;

      if (this.predictiveSearch && this.predictiveSearch.isOpen) return;

      if (scrollTop > this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (this.preventHide) return;
        requestAnimationFrame(this.hide.bind(this));
      } else if (scrollTop < this.currentScrollTop && scrollTop > this.headerBounds.bottom) {
        this.header.classList.add('scrolled-past-header');
        if (!this.preventReveal) {
          requestAnimationFrame(this.reveal.bind(this));
        } else {
          window.clearTimeout(this.isScrolling);

          this.isScrolling = setTimeout(() => {
            this.preventReveal = false;
          }, 66);

          requestAnimationFrame(this.hide.bind(this));
        }
      } else if (scrollTop <= this.headerBounds.top) {
        this.header.classList.remove('scrolled-past-header');
        requestAnimationFrame(this.reset.bind(this));
      }

      this.currentScrollTop = scrollTop;
    }

    hide() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-hidden', 'shopify-section-header-sticky');
      this.closeMenuDisclosure();
      this.closeSearchModal();
    }

    reveal() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.add('shopify-section-header-sticky', 'animate');
      this.header.classList.remove('shopify-section-header-hidden');
    }

    reset() {
      if (this.headerIsAlwaysSticky) return;
      this.header.classList.remove('shopify-section-header-hidden', 'shopify-section-header-sticky', 'animate');
    }

    closeMenuDisclosure() {
      this.disclosures = this.disclosures || this.header.querySelectorAll('header-menu');
      this.disclosures.forEach(disclosure => disclosure.close());
    }

    closeSearchModal() {
      this.searchModal = this.searchModal || this.header.querySelector('details-modal');
      this.searchModal.close(false);
    }
  }

  customElements.define('sticky-header', StickyHeader);
}
{% endjavascript %}


<script type="application/ld+json">
  {
    "@context": "http://schema.org",
    "@type": "Organization",
    "name": {{ shop.name | json }},
    {% if settings.logo %}
      "logo": {{ settings.logo | image_url: width: 500 | prepend: "https:" | json }},
    {% endif %}
    "sameAs": [
      {{ settings.social_twitter_link | json }},
      {{ settings.social_facebook_link | json }},
      {{ settings.social_pinterest_link | json }},
      {{ settings.social_instagram_link | json }},
      {{ settings.social_tiktok_link | json }},
      {{ settings.social_tumblr_link | json }},
      {{ settings.social_snapchat_link | json }},
      {{ settings.social_youtube_link | json }},
      {{ settings.social_vimeo_link | json }}
    ],
    "url": {{ request.origin | append: page.url | json }}
  }
</script>

{%- if request.page_type == 'index' -%}
  {% assign potential_action_target = request.origin | append: routes.search_url | append: "?q={search_term_string}" %}
  <script type="application/ld+json">
    {
      "@context": "http://schema.org",
      "@type": "WebSite",
      "name": {{ shop.name | json }},
      "potentialAction": {
        "@type": "SearchAction",
        "target": {{ potential_action_target | json }},
        "query-input": "required name=search_term_string"
      },
      "url": {{ request.origin | append: page.url | json }}
    }
  </script>
{%- endif -%}

{% schema %}
{
  "name": "t:sections.header.name",
  "class": "section-header",
  "max_blocks": 3,
  "settings": [
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    }, 
  ],
  "blocks": [
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
