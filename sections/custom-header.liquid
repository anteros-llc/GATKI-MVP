{% comment %}
  Shopify Header with Custom Logo and Menu
  - Desktop: Logo on the left, menu items on the right
  - Mobile: Logo on the left, hamburger menu opens a drawer with menu items + cart
  - Sticky Header using Dawn theme structure with custom styles
{% endcomment %}

<link rel="stylesheet" href="{{ 'component-list-menu.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-search.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-menu-drawer.css' | asset_url }}" media="print" onload="this.media='all'">
<link rel="stylesheet" href="{{ 'component-cart-notification.css' | asset_url }}" media="print" onload="this.media='all'">

{%- style -%}
  .section-header {
    position: sticky;
    top: 0;
    z-index: 1100;
    background: white;
    width: 100%;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease-in-out;
  }
  .header-content {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 20px;
  }
  .logo img {
    height: 50px;
  }
  .desktop-menu ul {
    display: flex;
    gap: 20px;
    list-style: none;
    margin: 0;
    padding: 0;
  }
  .desktop-menu a {
    text-decoration: none;
    color: black;
    font-weight: 600;
    font-size: 14px;
  }
  .mobile-menu-button {
    display: none;
    cursor: pointer;
  }
  .mobile-menu {
    display: none;
    position: fixed;
    top: 0;
    right: 0;
    width: 250px;
    height: 100vh;
    background: white;
    box-shadow: -5px 0 10px rgba(0, 0, 0, 0.1);
    padding: 20px;
  }
  .mobile-menu.active {
    display: block;
  }
  .mobile-menu-header {
    display: flex;
    justify-content: flex-end;
    padding: 10px;
    cursor: pointer;
  }
  .icon {
    display: inline-block;
    width: 24px;
    height: 24px;
  }
  .icon svg {
    width: 100%;
    height: 100%;
  }
  @media (max-width: 768px) {
    .desktop-menu {
      display: none;
    }
    .mobile-menu-button {
      display: block;
    }
  }
{%- endstyle -%}

<script src="{{ 'cart-notification.js' | asset_url }}" defer="defer"></script>

<sticky-header data-sticky-type="{{ section.settings.sticky_header_type }}">
  <header class="header section-header">
    <div class="container">
      <div class="header-content">
        <div class="logo">
          <a href="{{ shop.url }}">
            <img src="{{ settings.logo | img_url: 'medium' }}" alt="{{ shop.name }}" />
          </a>
        </div>
        
        <nav class="desktop-menu">
          <ul>
            {% for link in linklists.main-menu.links %}
              <li><a href="{{ link.url }}">{{ link.title }}</a></li>
            {% endfor %}
            <li>
              <a href="{{ routes.cart_url }}" id="cart-icon-bubble">
                {% if cart == empty %}
                  <span>CART</span>
                {% else %}
                  <span>CART</span>
                {% endif %}
                <span class="visually-hidden">CART</span>
                {%- if cart != empty -%}
                  <div class="cart-count-bubble">
                    {%- if cart.item_count < 100 -%}
                      <span aria-hidden="true">({{ cart.item_count }})</span>
                    {%- endif -%}
                    <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
                  </div>
                {%- endif -%}
              </a>
            </li>
          </ul>
        </nav>

        <div class="mobile-menu-button" onclick="toggleMobileMenu()">
          <span class="icon">
            {{- 'icon-hamburger.svg' | inline_asset_content -}}
          </span>
        </div>
      </div>
    </div>
  </header>
</sticky-header>

<div class="mobile-menu">
  <div class="mobile-menu-header" onclick="toggleMobileMenu()">
    <span class="icon">
      {{- 'icon-close.svg' | inline_asset_content -}}
    </span>
  </div>
  <nav>
    <ul>
      {% for link in linklists.main-menu.links %}
        <li><a href="{{ link.url }}">{{ link.title }}</a></li>
      {% endfor %}
      <li>
        <a href="{{ routes.cart_url }}" id="cart-icon-bubble">
          {% if cart == empty %}
            <span>CART</span>
          {% else %}
            <span>CART</span>
          {% endif %}
          <span class="visually-hidden">CART</span>
          {%- if cart != empty -%}
            <div class="cart-count-bubble">
              {%- if cart.item_count < 100 -%}
                <span aria-hidden="true">({{ cart.item_count }})</span>
              {%- endif -%}
              <span class="visually-hidden">{{ 'sections.header.cart_count' | t: count: cart.item_count }}</span>
            </div>
          {%- endif -%}
        </a>
      </li>
    </ul>
  </nav>
</div>

{% schema %}
{
  "name": "Header-custom",
  "settings": [
    {
      "type": "link_list",
      "id": "menu",
      "default": "main-menu",
      "label": "t:sections.header.settings.menu.label"
    },
    {
      "type": "select",
      "id": "sticky_header_type",
      "options": [
        {
          "value": "none",
          "label": "t:sections.header.settings.sticky_header_type.options__1.label"
        },
        {
          "value": "on-scroll-up",
          "label": "t:sections.header.settings.sticky_header_type.options__2.label"
        },
        {
          "value": "always",
          "label": "t:sections.header.settings.sticky_header_type.options__3.label"
        },
        {
          "value": "reduce-logo-size",
          "label": "t:sections.header.settings.sticky_header_type.options__4.label"
        }
      ],
      "default": "on-scroll-up",
      "label": "t:sections.header.settings.sticky_header_type.label"
    }
  ],
  "presets": [
    {
      "name": "Header-custom",
      "settings": {
        "menu": "main-menu",
        "sticky_header_type": "on-scroll-up"
      }
    }
  ]
}
{% endschema %}

<script>
  class StickyHeader extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.header = document.querySelector('.section-header');
      this.currentScrollTop = 0;
      this.onScrollHandler = this.onScroll.bind(this);
      window.addEventListener('scroll', this.onScrollHandler, false);
    }

    onScroll() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      if (scrollTop > this.currentScrollTop) {
        this.header.classList.add('scrolled-past-header');
      } else {
        this.header.classList.remove('scrolled-past-header');
      }
      this.currentScrollTop = scrollTop;
    }
  }
  customElements.define('sticky-header', StickyHeader);

  function toggleMobileMenu() {
    document.querySelector('.mobile-menu').classList.toggle('active');
  }
</script>
