<style>
.2up-carousel {
  position: relative;
  width: 100%;
  overflow: hidden;
}

.splide {
  width: 100%;
}

.splide__slide {
  display: flex;
  justify-content: space-between;
  align-items: center;
  opacity: 0;
  transition: opacity 0.6s ease-in-out;
}

.splide__slide.is-active {
  opacity: 1;
}

.carousel-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.carousel-image {
  flex: 1;
  max-width: 50%;
}

.carousel-content {
  flex: 1;
  text-align: left;
  display: flex;
  flex-direction: column;
  height: 100%;
  padding: 3%;
}

/* ✅ Custom Arrow Styles */
.splide__arrow {
  background: none;
  border: none;
  cursor: pointer;
  color: var(--color-chenpi);
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10;
}

.splide__arrow--prev {
  left: 20px;
}

.splide__arrow--next {
  right: 20px;
}

@media (max-width: 768px) {
  .splide__slide {
    flex-direction: column;
    text-align: left;
  }
  .carousel-image {
    max-width: 100%;
  }
}


</style>

<div class="2up-carousel">
  <div id="carousel" class="splide">
    <div class="splide__track">
      <ul class="splide__list">
        {% for block in section.blocks %}
          <li class="splide__slide">
            <div class="carousel-container">
              <img class="carousel-image" src="{{ block.settings.image | image_url: width: 1600 }}" alt="{{ block.settings.heading }}">
              <div class="carousel-content">
                <div class="carousel-header">
                  <h2>{{ block.settings.heading }}</h2>
                </div>
              </div>
            </div>
          </li>
        {% endfor %}
      </ul>
    </div>

    <!-- ✅ Custom Arrows (Only One Arrow Per Slide) -->
    <button class="splide__arrow splide__arrow--prev">
      <svg width="24" height="24" viewBox="0 0 13 13" fill="#91693C" xmlns="http://www.w3.org/2000/svg">
        <path d="M0.839844 6.55496L6.77028 0.834229L7.74419 1.73127L3.18767 6.1149H12.8398V7.55355L3.18767 7.53663L7.70941 11.9372L6.7355 12.8342L0.839844 7.07964V6.55496Z" fill="#91693C"/>
      </svg>
    </button>
    <button class="splide__arrow splide__arrow--next">
      <svg width="24" height="24" viewBox="0 0 12 13" fill="#91693C" xmlns="http://www.w3.org/2000/svg">
        <path d="M12 6.37918V6.90386L6.10435 12.6584L5.13043 11.7614L9.65217 7.36085L0 7.37777V5.93912H9.65217L5.09565 1.55548L6.06957 0.658447L12 6.37918Z" fill="#91693C"/>
      </svg>
    </button>
  </div>
</div>





<script>
document.addEventListener("DOMContentLoaded", function () {
  const carouselTrack = document.querySelector(".carousel-track");
  const slides = document.querySelectorAll(".carousel-slide");
  const nextButtons = document.querySelectorAll(".carousel-button.next");
  const prevButtons = document.querySelectorAll(".carousel-button.prev");

  let currentIndex = 0;
  const totalSlides = slides.length;
  let isDragging = false;
  let startX = 0;
  let deltaX = 0;

  function updateCarousel() {
    // Move slides smoothly
    const translateXValue = -currentIndex * 100 + "%";
    carouselTrack.style.transform = `translateX(${translateXValue})`;

    // Add fade effect
    slides.forEach((slide, index) => {
      slide.classList.toggle("active", index === currentIndex);
    });
  }

  function navigateToSlide(index) {
    if (index >= 0 && index < totalSlides) {
      currentIndex = index;
      updateCarousel();
    }
  }

  // Button Navigation
  nextButtons.forEach((button) => {
    button.addEventListener("click", () => navigateToSlide(currentIndex + 1));
  });

  prevButtons.forEach((button) => {
    button.addEventListener("click", () => navigateToSlide(currentIndex - 1));
  });

  // Touch & Swipe Events
  carouselTrack.addEventListener("touchstart", (e) => {
    startX = e.touches[0].clientX;
    isDragging = true;
  });

  carouselTrack.addEventListener("touchmove", (e) => {
    if (!isDragging) return;
    deltaX = startX - e.touches[0].clientX;
  });

  carouselTrack.addEventListener("touchend", () => {
    isDragging = false;
    if (deltaX > 50) navigateToSlide(currentIndex + 1); // Swipe left
    if (deltaX < -50) navigateToSlide(currentIndex - 1); // Swipe right
  });

  // Initialize first slide as active
  updateCarousel();
});


</script>

{% schema %}
{
  "name": "2UP Carousel",
  "tag": "section",
  "class": "section",
  "settings": [],
  "blocks": [
    {
      "type": "slide",
      "name": "Slide",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Slide Image"
        },
        {
          "type": "inline_richtext",
          "id": "heading",
          "label": "Heading"
        },
                {
  "type": "select",
  "id": "slide_type",
  "label": "Slide Type",
  "options": [
    {
      "value": "slider",
      "label": "Slider"
    },
    {
      "value": "text",
      "label": "Text"
    }
  ],
  "default": "slider"
},
      ],
      
    }
  ],
  "presets": [
    {
      "name": "2UP Carousel",
      "blocks": [
        { "type": "slide" },
        { "type": "slide" }
      ]
    }
  ]
}
{% endschema %}
